https://registry.terraform.io/modules/terraform-aws-modules/rds-aurora/aws/latest


Reference from above link
-------------------------
provider "aws" {
  region = "us-west-2"  # Provide AWS region
}

# Security group for access Aurora DB instance
resource "aws_security_group" "aurora_sg" {
  name        = "aurora-db-sg"
  description = "Security group for Aurora DB"

  ingress {
    from_port   = 3306  # Aurora default port
    to_port     = 3306
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]  # Allowing access from all IPs
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

# Subnet group for Aurora DB cluster
resource "aws_rds_cluster_subnet_group" "aurora_subnet_group" {
  name       = "aurora-subnet-group"
  subnet_ids = ["subnet-xxxxxxx", "subnet-yyyyyyy"]  # Add the subnets in this place

  tags = {
    Name = "Aurora DB Subnet Group"
  }
}

# Aurora DB Cluster
resource "aws_rds_cluster" "aurora_cluster" {
  cluster_identifier      = "aurora-cluster"
  engine                  = "aurora-mysql"  # We used Aurora Postgress SQL 
  master_username         = "admin"
  master_password         = "password123"  # Update with password
  database_name           = "mydatabase"
  backup_retention_period = 5
  preferred_backup_window = "07:00-09:00"
  db_subnet_group_name    = aws_rds_cluster_subnet_group.aurora_subnet_group.name
  vpc_security_group_ids  = [aws_security_group.aurora_sg.id]

  skip_final_snapshot = true  # This is related to snap please update according to your deisgn

  tags = {
    Name = "Aurora DB Cluster"
  }
}

# Aurora DB Cluster Instance
resource "aws_rds_cluster_instance" "aurora_instance" {
  cluster_identifier = aws_rds_cluster.aurora_cluster.id
  instance_class     = "db.r6g.large"  # Provide the class name as per the Design
  engine             = aws_rds_cluster.aurora_cluster.engine
  db_subnet_group_name = aws_rds_cluster_subnet_group.aurora_subnet_group.name
  publicly_accessible = true  # If public access required make it as true otherwise false

  tags = {
    Name = "Aurora DB Instance"
  }
}

# Outputs
output "aurora_endpoint" {
  description = "Aurora DB Endpoint"
  value       = aws_rds_cluster.aurora_cluster.endpoint
}

output "aurora_reader_endpoint" {
  description = "Aurora Reader Endpoint"
  value       = aws_rds_cluster.aurora_cluster.reader_endpoint
}

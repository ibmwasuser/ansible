# Specify the directory path
$directoryPath = "C:\temp"

# Define a recursive function to display folders and files with their sizes in a tree structure
function Show-TreeStructure {
    param (
        [string]$Path,
        [int]$Level = 0
    )

    # Get the list of items (folders and files) in the current path
    $items = Get-ChildItem -Path $Path -ErrorAction SilentlyContinue
    if ($items.Count -eq 0) {
        Write-Output "No items found in the specified directory."
        return
    }

    foreach ($item in $items) {
        # Indent based on the item's depth level
        $indent = " " * ($Level * 4) + "|-- "

        if ($item.PSIsContainer) {
            # Calculate folder size by summing the sizes of all files inside it
            $folderSizeMB = (Get-ChildItem -Path $item.FullName -Recurse -File | Measure-Object -Property Length -Sum).Sum / 1MB
            $folderSizeMB = [math]::Round($folderSizeMB, 2)
            Write-Output "$indent$($item.Name) (Folder) - $folderSizeMB MB"

            # Recursively call the function for subfolders
            Show-TreeStructure -Path $item.FullName -Level ($Level + 1)
        } else {
            # Display file name and size in MB
            $fileSizeMB = [math]::Round($item.Length / 1MB, 2)
            Write-Output "$indent$($item.Name) (File) - $fileSizeMB MB"
        }
    }
}

# Run the function on the specified directory
Show-TreeStructure -Path $directoryPath


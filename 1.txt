# Replace with your server names
$servers = @("Server1", "Server2", "Server3")

# Initialize an array to hold the output
$htmlOutput = @()

# Start the HTML content
$htmlOutput += "<html><head><title>Disconnected Users</title></head><body>"
$htmlOutput += "<h1>Disconnected Users Report</h1>"
$htmlOutput += "<table border='1'><tr><th>Server</th><th>Disconnected Users</th></tr>"

foreach ($server in $servers) {
    try {
        # Execute the quser command to get logged-on users
        $output = quser /server:$server 2>&1

        # Check if the output contains valid user data
        if ($output -match "No user exists") {
            # If no user is logged on, add a blank entry for that server
            $htmlOutput += "<tr><td>$server</td><td>No users logged on</td></tr>"
        } elseif ($output -match "USER") {
            # Extract disconnected user information
            $disconnectedUsers = $output | Where-Object { $_ -match "^\s*(\S+)\s+\S+\s+\S+\s+\S+\s+Disc" } | ForEach-Object {
                # Get the user name
                $_ -replace '^\s*(\S+)\s+\S+\s+\S+\s+\S+\s+Disc', '$1'
            } -join ", "

            # Add the server and disconnected users to the HTML output
            if ($disconnectedUsers) {
                $htmlOutput += "<tr><td>$server</td><td>$disconnectedUsers</td></tr>"
            } else {
                $htmlOutput += "<tr><td>$server</td><td>No disconnected users</td></tr>"
            }
        } else {
            # If there are other unexpected outputs, handle them
            $htmlOutput += "<tr><td>$server</td><td>Error retrieving user info</td></tr>"
        }
    } catch {
        # If there is a connection error, add a blank entry for that server
        $htmlOutput += "<tr><td>$server</td><td>Error connecting</td></tr>"
    }
}

# End the HTML content
$htmlOutput += "</table></body></html>"

# Specify the output file location
$outputFile = "C:\Path\To\Your\Directory\DisconnectedUsersReport.html"  # Change this to your desired path

# Save the HTML output to a file
$htmlOutput | Out-File -FilePath $outputFile -Encoding UTF8

# Inform the user where the report is saved
Write-Output "Report saved to $outputFile"

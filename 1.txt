# Path to the input file with computer names (one per line)
$inputFile = "C:\Path\To\Computers.txt"

# Read the computer names from the input file
$computerNames = Get-Content -Path $inputFile

# Define the script block
$scriptBlock = {
    param($ComputerName)

    # Get all shared folders
    $shares = Get-WmiObject -Class Win32_Share -ComputerName $ComputerName

    # Filter out default administrative shares like C$, D$, ADMIN$, IPC$
    $userDefinedShares = $shares | Where-Object { $_.Name -notmatch '^\$|ADMIN\$|IPC\$' }

    # Loop through each user-defined share
    foreach ($share in $userDefinedShares) {
        Write-Host "Computer: $ComputerName"
        Write-Host "Share Name: $($share.Name)"
        Write-Host "Path: $($share.Path)"
        Write-Host "Description: $($share.Description)"
        Write-Host "--------------------------------"

        # Get Share permissions using WMI (Win32_LogicalShareSecuritySetting)
        $sharePermissions = Get-WmiObject -Query "SELECT * FROM Win32_LogicalShareSecuritySetting WHERE Name = '$($share.Name)'" -ComputerName $ComputerName

        $accessList = $sharePermissions.GetSecurityDescriptor().Descriptor.DACL
        foreach ($access in $accessList) {
            $trustee = $access.Trustee.Name
            $accessMask = $access.AccessMask

            # Convert AccessMask to readable permissions
            $permissionsReadable = Switch ($accessMask) {
                2032127 { "Full Control" }
                1245631 { "Change" }
                1179817 { "Read" }
                Default { "Unknown" }
            }

            Write-Host "User/Group: $trustee"
            Write-Host "Permissions: $permissionsReadable"
            Write-Host "--------------------------------"
        }

        # Get NTFS permissions for the folder
        try {
            $acl = Get-Acl $share.Path
            $acl.Access | ForEach-Object {
                Write-Host "NTFS Permissions for $($_.IdentityReference): $($_.FileSystemRights)"
            }
        } catch {
            Write-Host "Failed to get NTFS permissions for path: $($share.Path)"
        }

        Write-Host "--------------------------------`n"
    }
}

# Loop through each computer name in the input file
foreach ($computer in $computerNames) {
    # Invoke the script block for each computer
    Invoke-Command -ScriptBlock $scriptBlock -ArgumentList $computer
}

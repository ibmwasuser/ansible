# List of remote servers
$servers = @("Server1", "Server2", "Server3")  # Replace with your actual server names

# Script block to run on each server
$scriptBlock = {
    $ram = [math]::Round((Get-CimInstance Win32_ComputerSystem).TotalPhysicalMemory / 1GB, 2)
    $cpu = Get-CimInstance Win32_Processor
    $logicalCores = ($cpu | Measure-Object -Property NumberOfLogicalProcessors -Sum).Sum
    $physicalCores = ($cpu | Measure-Object -Property NumberOfCores -Sum).Sum
    $drives = Get-CimInstance Win32_LogicalDisk -Filter "DriveType=3" | ForEach-Object {
        [PSCustomObject]@{
            Drive     = $_.DeviceID
            Size_GB   = [math]::Round($_.Size / 1GB, 2)
        }
    }

    [PSCustomObject]@{
        Server         = $env:COMPUTERNAME
        RAM_GB         = $ram
        Physical_Cores = $physicalCores
        Logical_Cores  = $logicalCores
        Drives         = ($drives | Out-String).Trim()
    }
}

# Run the script on all servers
$results = foreach ($server in $servers) {
    try {
        Invoke-Command -ComputerName $server -ScriptBlock $scriptBlock -ErrorAction Stop
    } catch {
        [PSCustomObject]@{
            Server         = $server
            RAM_GB         = "N/A"
            Physical_Cores = "N/A"
            Logical_Cores  = "N/A"
            Drives         = "Connection Failed"
        }
    }
}

# Display results
$results | Format-Table -AutoSize
